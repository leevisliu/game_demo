{"__type__":"cc.TextAsset","_name":"zjh","text":"syntax = \"proto3\";\npackage ZJH;\n\nmessage MsgBody  {\n\n    GameStartNotify   game_start_notify = 1;   \n\n    TurnWhoHandleNotify turn_who_handle_notify = 2;\n\n    FoldReq             fold_req = 3;\n    FoldRes             fold_res = 4;\n\n    RaiseChipReq        raise_chip_req = 5;\n    RaiseChipRes        raise_chip_res = 6;\n\n    ChooseBattleReq     choose_battle_req = 7;        //请求可以比牌的人\n    ChooseBattleRes     choose_battle_res = 8;        \n\n    BattleReq           battle_req = 9;                  //发起比牌\n    BattleNotify        battle_notify = 10;               //比牌回应\n\n    CallReq             call_req = 11;\n    CallRes             call_res = 12;\n\n    LookCardReq         look_card_req = 13;\n    LookCardRes         look_card_res = 14;\n\n    GameConcludeNotify  game_conclude_notify = 15;\n\n    GameReconnectInfo game_reconnect_info = 16;\n\n    AllInBattleReq    all_in_battle_req = 17;\n}\n\n\nmessage RoomInfo  {\n    string room_base_note  = 1 ;      //房间底注\n    string room_code = 2;             //房间编号信息\n}\n\n\nmessage PlayerInfo  {\n    uint32 player_id = 1;\n    uint32 seat_id = 2;         //座位ID\n    string username = 3;\n    string gold = 4;\n    uint32 headimg_id = 5;\n    uint32 sex = 6;             //性别\n    uint32 vip_level = 7;           //vip等级\n}\n\nmessage HandleStatus {\n    bool can_raise = 1;             //是否可以加注\n    bool can_battle = 2;            //是否可以比牌\n    bool can_call = 3;              //是否可以跟注\n    bool can_allin = 4;            //是否可以孤注一掷\n    repeated string limit_arr = 5;  //加注限制范围 最小和最大\n}\n\nmessage CardTest  {\n    uint32 seat_id = 1;         //座位ID\n    string card_val = 2;\n}\n\nmessage GameStartNotify  {                         //游戏开始通知\n    repeated PlayerInfo player_list = 1;           //所有玩家\n    RoomInfo room_info = 2;                        //房间信息\n    uint32 first_seat_id = 3;                      //首轮玩家座位号\n    uint32 current_num_round = 4;                  //当前轮数        \n    uint32 total_num_round = 5;                    //总轮数\n    string current_chip_num = 6;                   //当前跟注筹码值\n    string total_chip_num = 7;                     //已下注筹码值\n    repeated string chip_arr = 8;                  //可加注筹码\n    repeated CardTest cards_test = 9;\n}\n\nmessage TurnWhoHandleNotify  {      //轮到谁操作\n    uint32 turn_seat_id = 1;        //座位号\n    HandleStatus handle_status = 2; //操作状态   \n    uint32 current_num_round = 3;   //当前轮数\n    uint32 total_num_round = 4;     //总轮数\n    string current_chip_num = 5;    //当前跟注筹码值\n    string total_chip_num = 6;      //已下注筹码值\n    uint32 time_out = 7;            //操作倒计时\n}\n\nmessage FoldReq {                   //弃牌请求\n    uint32 player_id = 1;\n}\n\nmessage FoldRes {                   //弃牌回应\n    uint32 seat_id = 1;\n    repeated uint32 card_arr = 2;   //自己才有数值\n    uint32 val_type = 3;            //玩家的牌型, 1~6 散牌 对子 顺子 金花 同花顺 豹子  235: 特殊牌\n}\n\nmessage RaiseChipReq {              //加注请求\n    uint32 player_id = 1;\n    string raise_chip = 2;          //加注筹码\n}\n\nmessage RaiseChipRes {\n    uint32 seat_id = 1;\n    string raise_chip = 2;          //加注筹码\n    string gold = 3;                //更新玩家金币\n    bool   can_allin = 4;           //是否触发孤注一掷  \n}\n\nmessage ChooseBattleReq {        //请求可以比牌的人\n    uint32 player_id = 1;   \n}\n\n//可以比牌玩家信息\nmessage CanBattlePlayerInfo {\n    uint32 seat_id = 1;\n    uint32 player_id = 2;\n}\n\nmessage ChooseBattleRes {\n    repeated CanBattlePlayerInfo battle_player_arr = 1;  //可以比牌玩家\n}\n\nmessage BattleReq {                //发起比牌\n    uint32 player_id = 1;       \n    uint32 battle_player_id =2;    //被比玩家的座位号  \n}\n\nmessage AllInBattleReq {                //all in 发起比牌\n    uint32 player_id = 1;       \n}\n\nmessage BattleNotify {                  //比牌通知 哪个玩家与哪个玩家比牌\n    uint32 sponsor_seat_id = 1;         //发起人座位号\n    uint32 passive_seat_id = 2;         //被动比牌座位号\n    bool   is_sponsor_win = 3;          //发起者是否胜利\n    string battle_chip = 4;             //筹码数目\n    string total_chip_num = 5;          //已下注筹码值\n    repeated uint32 card_arr = 6;       //自己才有数值\n    uint32 val_type = 7;                //玩家的牌型, 1~6 散牌 对子 顺子 金花 同花顺 豹子  235: 特殊牌    \n    string sponsor_gold = 8;            //更新玩家金币\n    string passive_gold = 9;            //更新被比牌者金币\n}\n\nmessage CallReq {                       //跟注请求\n    uint32 player_id = 1;\n}\n\nmessage CallRes {\n    uint32 seat_id = 1;\n    string call_chip = 2;               //跟注筹码\n    string gold = 3;                    //更新玩家金币\n    bool   can_allin = 4;               //是否触发孤注一掷 \n}\n\nmessage LookCardReq {\n    uint32 player_id = 1;               //看牌请求\n}\n\nmessage LookCardRes {\n    uint32 seat_id = 1;   \n    repeated uint32 card_arr = 2;\n    uint32 val_type = 3;                //玩家的牌型, 1~6 散牌 对子 顺子 金花 同花顺 豹子  235: 特殊牌\n    string current_chip_num = 4;\n    HandleStatus handle_status = 5;     //操作状态 \n}\n\nmessage GameConclude {\n    uint32 seat_id = 1;                 //玩家座位号\n    string gold = 2;                    //玩家结算后的金币数量\n    string score = 3;                   //输赢的分数\n    repeated uint32 card_arr = 4;       //需要摊牌的人才有数值\n    uint32 val_type = 5;                //玩家的牌型, 1~6 散牌 对子 顺子 金花 同花顺 豹子  235: 特殊牌\n}\n\nmessage GameConcludeNotify  {                   //结算推送\n    repeated GameConclude game_conclude = 1;\n    uint32 win_seat_id = 2;                     //赢家位置\n}\n\n\n//玩家状态\nmessage PlayerStatusInfo {\n    uint32 seat_id = 1;                 //玩家座位号\n    bool is_look = 2;\n    bool is_fold = 3;\n    bool is_lose = 4;\n    repeated uint32 card_arr = 5;       //自己摊牌了弃牌了比牌失败才有牌值\n    uint32 val_type = 6;                //玩家的牌型, 1~6 散牌 对子 顺子 金花 同花顺 豹子  235: 特殊牌\n}\n\n//重连信息\nmessage GameReconnectInfo  {\n    GameStartNotify game_start_notify = 1;                     //游戏开始的信息，包括所有玩家的信息 \n    TurnWhoHandleNotify  turn_who_handle_notify = 2;           //轮到谁操作\n    repeated PlayerStatusInfo player_info = 3;                 //玩家状态信息\n    repeated string jetton_arr  = 4;                           //桌上下注的筹码的数量和值\n}\n"}