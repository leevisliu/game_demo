{"__type__":"cc.TextAsset","_name":"xlch","text":"syntax = \"proto3\";\r\npackage XLCH;\r\n\r\nmessage MsgBody  {\r\n    GameStartNotify     game_start_notify = 1;          //游戏开始\r\n\r\n    SendBankNotify      send_bank_notify = 2;           //庄家消息\r\n\r\n    SendCardsNotify     send_cards_notify = 3;          //发牌消息\r\n                  \r\n    TurnOperNotify      turn_oper_notify = 4;           //轮到谁操作组播\r\n\r\n    PlayerCanOperNotify can_oper_notify = 5;            //当前有可特殊操作的玩家私发其操作消息\r\n\r\n    OperReq             oper_req = 6;                   //请求操作\r\n    OperRes             oper_res = 7;                   //请求操作返回\r\n\r\n    GameConcludeNotify  game_conclude_notify = 8;       //结算\r\n    GameReconnectInfo   game_reconnect_info = 9;        //断线重连\r\n\r\n    GetCardNotify       get_card_notify = 10;           //玩家摸牌组播\r\n\r\n    CanTingNotify       can_ting_notify = 11;           //玩家能听牌通知 \r\n\r\n    SendTingNotify      send_ting_notify = 12;         //发送玩家听消息组播\r\n\r\n    ChangeCardNotify    change_card_notify = 13;       //通知发送换三张消息\r\n    PlayerChangeCard    player_change_card = 14;       //发送玩家确认换的三张牌\r\n    PlayerChangeCardRes player_change_card_res = 15;   //玩家换三张消息返回\r\n    SendChangeCard      send_change_card = 16;         //服务器发送换牌消息\r\n\r\n    DingQueNotify       ding_que_notify = 17;          //通知定缺消息\r\n    PlayerDingQue       player_ding_que = 18;          //发送玩家定缺\r\n    PlayerDingQueRes    player_ding_que_res = 19;      //玩家定缺消息返回\r\n\r\n    GuaFengXiaYuNotify  guafeng_xiayu_notify = 20;      //刮风下雨消息通知(这3个消息服务器主动推送给客户端，然后客户端显示对应动画即可)\r\n    HujiaoNotify        hujiao_notify = 21;             //呼叫转移消息通知\r\n    LiujuNotify         liu_ju_notify = 22;             //流局时消息通知\r\n    DingQueRes          ding_que_res = 23;              //所有玩家定缺消息\r\n}   \r\n\r\nmessage PlayerInfo  {\r\n    uint32 player_id = 1;\r\n    uint32 seat_id = 2;            //椅子号\r\n    string username = 3;\r\n    uint32 headimg_id = 4;\r\n    uint32 sex = 5;\r\n    string gold = 6;\r\n    string score = 7;\r\n    uint32 windPos = 8;            //玩家风向 1东 2南 3西 4北\r\n}\r\n\r\n//房间信息\r\nmessage RoomInfo  {\r\n    string room_base_note = 1;              //房间底注\r\n    string room_code = 2;                   //房间编号信息\r\n}\r\n\r\n//游戏开始通知\r\nmessage GameStartNotify  {            \r\n    RoomInfo room_info = 1;                             //房间信息\r\n    uint32 time_out = 2;                                //开始状态时间\r\n    repeated PlayerInfo player_list = 3;                //所有玩家  \r\n}\r\n\r\n//发送庄家消息\r\nmessage SendBankNotify { \r\n    uint32 bankUser_seat_id = 1;                        //庄家椅子号  \r\n    uint32 windPos = 2;                                  //我的位置 东南西北  1，2，3，4\r\n}\r\n\r\n//定完庄后的发牌消息，私发给每个玩家的牌\r\nmessage SendCardsNotify {   \r\n    uint32 seat_id = 1;                                 //椅子号            \r\n    repeated uint32 cards = 2;                          //牌 [详见文件gamedefine.lua的Def.cards]\r\n    uint32 left_card = 3;                               //剩余牌数 \r\n}\r\n\r\n//只负责组播轮到谁操作的光标\r\nmessage TurnOperNotify {\r\n    uint32 seat_id = 1;                                 //椅子号\r\n    uint32 time_out = 2;                                //剩余可操作时间\r\n}\r\n\r\n//玩家摸牌组播（摸牌的椅子可以拿到正确的card,其余人为nil）\r\nmessage GetCardNotify {\r\n    uint32 seat_id = 1;                                 //椅子号\r\n    repeated uint32 card = 2;                           //摸的牌\r\n    uint32 left_card = 3;                               //剩余牌数\r\n}\r\n\r\n//卡牌组合\r\nmessage CardsCombo {\r\n    uint32 oper_type =  1;                              //组合类型[打吃碰杠胡过]\r\n    repeated uint32 cards = 2;                          //该组合的牌数据 \r\n    uint32 oper_seat_id = 3;                            //当该组合是 吃，碰，明杠，点炮胡时的提供者， 其余为无效值65535\r\n}\r\n\r\n//上一位玩家打牌了或者自己摸牌后，若判断有特殊操作这时候私发给每个能[吃碰杠胡过]玩家消息  [新增过操作ID: Def.operType.check = 10]\r\nmessage PlayerCanOperNotify {\r\n    repeated uint32 oper_type = 1;                      //吃碰杠胡过操作ID表\r\n    uint32 time_out = 2;                                //可操作时间\r\n    repeated CardsCombo combo = 3;                      //可成组合的牌组合表\r\n}\r\n\r\n//请求操作\r\n//第3个字段oper_cards解释： 被操作的牌(如桌上打了一万，我有23万，操作吃，组成1，2，3万这里就发 [1万，2万,3万]。若正常打牌X就发[牌X]\r\n//其他类似把整个操作的组合数据一起都发来不管是你手里还是桌上哪儿的牌，但是一定保证oper_type严格按照协定中[Def.operType]操作类型即可\r\nmessage OperReq {\r\n    uint32 seat_id = 1;                                 //操作玩家seat_id\r\n    uint32 oper_type = 2;                               //操作类型[详见Def.operType]\r\n    repeated uint32 oper_cards = 3;                     \r\n} \r\n\r\n//操作后返回操作的结果\r\nmessage OperRes {\r\n    int32 ret = 1;                                      //返回状态码 0成功 1等待其他人操作 -1失败\r\n    uint32 seat_id = 2;                                 //操作玩家椅子号\r\n    CardsCombo oper_cards = 3;                          //操作的具体牌信息\r\n}\r\n\r\n//结算时所有玩家摊牌时展示的信息（番型ID见Def.fanXing）\r\nmessage PlayerFinishInfo {\r\n    uint32 seat_id = 1;                                 //椅子号\r\n    repeated uint32 cards = 2;                          //手牌信息\r\n    repeated uint32 fanxing = 3;                        //番型数组(和下面对应即 fanxing[1]的番型倍数就是fanxingValue[1] )\r\n    repeated uint32 fanxingValue = 4;                   //对应上面的番型数组具体番型的值\r\n    repeated CardsCombo combos = 5;                     //玩家的组合牌表\r\n}\r\n\r\n//玩家每条结算信息(一局能多次胡)[这里也包含了杠的分数]\r\nmessage PlayerOneConclude{\r\n    uint32 actionType = 1;                              //自摸，被自摸等操作ID\r\n    repeated uint32 fanxing = 2;                        //番型数组 [杠操作时这里没数据]\r\n    repeated uint32 oper_seats = 3;                     //操作的玩家椅子号\r\n    uint32 beiShu = 4;                                  //倍数\r\n    string score = 5;                                    //得分\r\n}\r\n\r\n//结算消息\r\nmessage GameConcludeNotify  {             \r\n    repeated PlayerInfo player_list = 1;               //所有玩家得分情况\r\n    repeated PlayerFinishInfo player_finish_info = 2;  //所有玩家结束时具体牌型输赢信息\r\n    uint32 huType = 3; //胡牌类型  0代表流局  9点炮 8自摸 \r\n    repeated PlayerOneConclude myConcludeHistory = 4;            //我的结算历史\r\n}\r\n\r\n//玩家已经凑成的组合\r\nmessage PlayerCombo {\r\n    uint32 seat_id =  1;                                 //椅子号\r\n    repeated CardsCombo combos = 2;                      //玩家的组合牌表\r\n    repeated int32 outCards = 3;                        //玩家打出的牌\r\n    repeated uint32 huaPai = 4;                         //玩家的花牌\r\n}\r\n\r\nmessage huCards {\r\n    repeated uint32 hucard = 1;                         //每个玩家的胡牌数据\r\n    uint32 seat_id = 2;                                 //椅子号\r\n}\r\n\r\n//重连信息\r\nmessage GameReconnectInfo  {\r\n    uint32 my_seat_id = 1;                              //玩家椅子号\r\n    uint32 oper_seat_id = 2;                            //当前轮到操作玩家椅子号\r\n    uint32 bankUser_seat_id = 3;                        //庄家椅子号\r\n    uint32 leftTime = 4;                                //当前操作者剩余时间\r\n    RoomInfo room_info = 5;                             //房间信息\r\n    repeated PlayerInfo player_list = 6;                //所有玩家信息\r\n    repeated PlayerFinishInfo player_finish_info = 7;   //若结算了，所有玩家结束时具体牌型输赢信息\r\n    repeated tingCardInfo player_ting_cards = 8;        //玩家正在听的牌数据(若无则玩家不在听牌)\r\n    repeated PlayerCombo player_combos = 9;             //所有玩家已凑成牌表\r\n    uint32 left_card = 10;                              //剩余牌数\r\n    repeated uint32 handCards = 11;                     //手牌信息\r\n    repeated uint32 player_handcards_nums = 12;         //所有玩家手牌数量\r\n    PlayerCanOperNotify combos = 13;                    //玩家可操作\r\n    repeated uint32 playerTingStatus = 14;              //0无状态 1待听 2正在听 3显示听按钮状态 4已经取消听\r\n    repeated tingPaiCombo ting_combo = 15;              //听牌组合\r\n    uint32 last_outcard_seat_id  = 16;                  //最后一个出牌玩家\r\n    uint32 windPos = 17;                                //玩家方位\r\n    repeated uint32 playerStatus = 18;                  //换牌定缺状态  1还未到换牌环节 2正在换牌中3换牌完成还未到定缺环节4正在定缺中5定缺完成6后续正常游戏中\r\n    repeated uint32 cards = 19;                         //玩家换的三张牌(未换时这里是服务器提供的默认值，换了后就是实际值)\r\n    repeated uint32 code = 20;                          //玩家定缺数据1万 2条 3筒(同换牌)\r\n    repeated uint32 gameStatus = 21;                    //游戏状态4游戏中 6换三张 7定缺\r\n    repeated huCards huCardsArry = 22;                  //所有玩家胡牌数据 \r\n}\r\n\r\nmessage tingCardInfo {\r\n    uint32 ting_card = 1;                               //听的牌\r\n    uint32 left_nums = 2;                               //剩余张数\r\n    uint32 fan_Nums = 3;                                //番数\r\n}\r\n\r\nmessage tingPaiCombo {\r\n    uint32 out_card = 1;                                //打的牌\r\n    repeated tingCardInfo ting_cards = 2;               //打了out_card能胡的牌\r\n}\r\n\r\n//听牌按钮私发\r\nmessage CanTingNotify {\r\n    repeated tingPaiCombo ting_combo = 1;               //听牌组合\r\n}\r\n\r\n//组播玩家听\r\nmessage SendTingNotify {\r\n    uint32 seat_id = 1;                                 //听牌玩家\r\n    repeated tingCardInfo ting_cards = 2;               //听牌数据\r\n}\r\n\r\n//换三张\r\nmessage ChangeCardNotify {\r\n    uint32 time_out = 1;                                //换牌时间\r\n    repeated uint32 cards = 2;                          //换的三张牌\r\n}\r\n\r\n//玩家确认换的三张牌\r\nmessage PlayerChangeCard {\r\n    uint32 player_id = 1;                                //玩家id\r\n    repeated uint32 cards = 2;                          //玩家换的牌\r\n}\r\n\r\n//玩家确认换的三张牌\r\nmessage PlayerChangeCardRes {\r\n    uint32 seat_id = 1;                                 //玩家椅子号\r\n    uint32 code = 2;                                    //0成功 1失败\r\n}\r\n\r\n//服务器给每个玩家私发换的牌\r\nmessage SendChangeCard {\r\n    uint32 changeWay = 1;                               //换牌方式 1顺时针 2逆时针 3对家\r\n    repeated uint32 get_cards = 2;                      //换到的牌\r\n    repeated uint32 remove_cards = 3;                   //换走的牌\r\n}\r\n\r\n//定缺消息\r\nmessage DingQueNotify {\r\n    uint32 time_out = 1;                            \r\n    uint32 code = 2;                                    //1万 2条 3筒\r\n}\r\n\r\nmessage PlayerDingQue {\r\n    uint32 player_id = 1; \r\n    uint32 code = 2;                                    //1万 2条 3筒\r\n}\r\n\r\nmessage PlayerDingQueRes {\r\n    uint32 seat_id = 1; \r\n    uint32 ret = 2;                                    //0成功 1失败\r\n    uint32 code = 3;                                   //1万 2条 3筒\r\n}\r\n\r\nmessage GuaFengXiaYuNotify {\r\n    uint32 code = 1;                                    //1刮风  2下雨\r\n    repeated uint32 score = 2;                          //刮风下雨收入或者支出的分数数组(下标即是对应椅子号)\r\n}\r\n\r\nmessage HujiaoNotify {\r\n    repeated uint32 score = 1;                          //收入或者支出的分数数组(下标即是对应椅子号)\r\n}\r\n\r\nmessage LiujuNotify {\r\n    repeated uint32 tuiShuiScore = 1;                   //退税分数数组(下标为椅子号)\r\n    repeated uint32 chaHuaZhuScore = 2;                 //查花猪\r\n    repeated uint32 chaDaJiaoScore = 3;                 //查大叫\r\n}\r\n\r\nmessage DingQueRes {\r\n    repeated uint32 dingque = 1;                        //所有玩家定缺数据\r\n}"}