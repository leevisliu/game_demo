{"__type__":"cc.TextAsset","_name":"ddz","text":"syntax = \"proto3\";\npackage DDZ;\n\n//游戏状态 1游戏开始 2发牌 3抢地主 4抢地主完成 5玩家操作 6结束\n//玩家操作 1抢地主 2出牌 3提示 4不出\n\nmessage MsgBody {\n    GameStartNotify         game_start_notify           = 1;    //游戏初始化消息\n\n    //游戏环节消息\n    GameSendCardNotify      game_send_card_notify       = 2;    //发牌环节通知\n    GameLandlordNotify      game_landlord_notify        = 3;    //抢地主环节通知\n    GameLandLordEndNotify   game_landlord_end_notify    = 4;    //抢地主完成环节通知\n    GameUserOperateNotify   game_user_operate_notify    = 5;    //玩家操作通知\n    GameRefreshCardNotify   game_refresh_card_notify    = 6;    //刷新玩家牌通知\n    GameRefreshMarkerNotify game_refresh_marker_notify  = 7;    //刷新玩家记牌器通知\n    GameEndNotify           game_end_notify             = 8;    //游戏结束通知\n    GameSeenCardNotify      game_seen_card_notify       = 30;   //明牌通知\n\n    GameLandlordReq         game_landlord_req           = 9;    //抢地主请求\n    GameLandLordRes         game_landlord_res           = 10;   //抢地主回应\n    GameUserOperateReq      game_user_operate_req       = 11;   //玩家操作请求\n    GameUserOperateRes      game_user_operate_res       = 12;   //玩家操作回应\n    GameUserDepositReq      game_user_deposit_req       = 13;   //玩家托管请求\n    GameUserDepositRes      game_user_deposit_res       = 14;   //玩家托管回应\n    GameSeenCardReq         game_seen_card_req          = 15;   //明牌请求\n    GameSeenCardRes         game_seen_card_res          = 16;   //明牌回应\n\n    \n    //游戏内部其他信息\n    GameErrRes              game_err_res                = 20;   //游戏内部错误信息\n    //游戏内部其他信息\n    GameReconnectInfo       game_reconnect_info         = 21;\n}\n\nmessage PlayerInfo  {\n    uint32 player_id = 1;\n    uint32 seat_id = 2;                         //座位ID\n    string username = 3;\n    string gold = 4;\n    uint32 headimg_id = 5;\n    uint32 sex = 6;                             //性别\n}\n\nmessage RoomInfo  {\n    string room_base_note  = 1;                 //房间底注\n    string room_code = 2;                       //房间编号信息\n}\n\n//通知开始游戏\nmessage GameStartNotify {\n    repeated PlayerInfo player_list = 1;        //所有玩家\n    RoomInfo room_info = 2;                     //房间信息 \n}\n\n//发牌环节通知\nmessage GameSendCardNotify {\n    repeated uint32 card_arr = 1;               //该玩家的牌\n    bool is_reboot = 2;                         //是否重新发牌\n}\n\n//明牌通知\nmessage GameSeenCardNotify {\n\n}\n\n//明牌操作\nmessage GameSeenCardReq {\n\n}\n\n//明牌回应\nmessage GameSeenCardRes {\n    uint32 seat_id = 1;\n    repeated uint32 card_arr = 2;               //当前玩家明牌牌组\n}\n\n//抢地主环节通知\nmessage GameLandlordNotify {\n    uint32 seat_id = 1;                         //当前执行操作的玩家座位id\n    repeated uint32 grab_mul_arr = 2;           //抢地主的倍数数组\n    uint32 time_out = 3;                        //超时时间\n}\n\n//抢地主完成环节通知\nmessage GameLandLordEndNotify { \n    uint32 landlord_seat_id = 1;                    //地主座位id\n    uint32 cur_mul = 2;                             //抢地主最终的倍数\n    repeated uint32 landlord_extra_card = 3;        //庄家的额外牌\n}\n\nmessage CardTips {\n    repeated uint32 card_arr = 1;\n}\n\n//玩家操作通知\nmessage GameUserOperateNotify {\n    uint32 seat_id = 1;                         //座位id\n    uint32 oper_type = 2;                       //1:全显示 2:只显示出牌 3:要不起\n    repeated CardTips card_tips = 3;            //所有可提示出的牌\n    uint32 time_out = 4;                        //超时时间\n}\n\n//刷新牌通知\nmessage GameRefreshCardNotify {\n    repeated uint32 card_arr = 1;               //当前玩家牌组\n}\n\n//刷新记牌器通知\nmessage GameRefreshMarkerNotify {\n    repeated uint32 card_marker_arr = 1;        //当前玩家记牌器组\n}\n\nmessage EndPlayerInfo {\n    uint32 seat_id = 1;                         //座位id\n    repeated uint32 remain_card_arr = 2;        //剩余牌组\n    uint32 remain_card_count = 3;               //剩余牌数量\n    string gold = 4;                            //玩家金币\n    string score = 5;                           //玩家得分\n}\n\n//游戏结束通知\nmessage GameEndNotify {\n    repeated EndPlayerInfo end_player_info = 1; //游戏结束时所有玩家的信息\n    bool is_win = 2;                            //我是否胜利                \n    int32 spring_group = 3;                    //春天阵营 0表示地主 1表示农民 -1表示当前无春天\n}\n\n//抢地主请求\nmessage GameLandlordReq {\n    uint32 player_id = 1;                       //玩家id\n    uint32 landlord_mul = 2;                    //抢地主倍数\n}\n\n\n//抢地主回应\nmessage GameLandLordRes {\n    uint32 seat_id = 1;                         //座位id\n    uint32 landlord_mul = 2;                    //抢地主倍数\n    uint32 cur_mul = 3;                         //当前倍数\n}\n\n//玩家操作请求\nmessage GameUserOperateReq {\n    uint32 player_id = 1;                       //玩家id\n    uint32 user_operate = 2;                    //进行操作的数组 2出牌 4不出\n    repeated uint32 out_card_arr = 3;           //当前出的牌 如果过牌则为空\n}\n\n//玩家操作回应\nmessage GameUserOperateRes {\n    uint32 seat_id = 2;                         //进行了操作的玩家座位号\n    uint32 user_operate = 3;                    //该玩家进行的操作类型\n    repeated uint32 card_arr = 4;               //该玩家进行的操作的牌\n    uint32 card_type = 5;                       //该玩家进行的操作的牌的牌型\n    uint32 cur_mul = 6;                         //当前倍数\n    uint32 remain_card_count = 7;               //牌剩余数量\n    repeated uint32 seen_card_arr = 8;          //明牌数组 有则有 无则空\n}\n\n//玩家托管请求\nmessage GameUserDepositReq {\n    uint32 player_id = 1;                       //玩家id\n    bool is_deposit = 2;                        //是否托管\n}\n\n//玩家托管回应\nmessage GameUserDepositRes {\n    uint32 seat_id = 1;                         //座位id\n    bool is_deposit = 2;                        //是否该玩家托管\n}\n\nmessage GameErrRes {    //游戏内部错误信息\n    uint32 err_id = 1;                          //\n}\n\nmessage AllPlayerData {\n    uint32 seat_id = 1;\n    int32 landlord_mul = 2;                     //抢地主倍数 不抢为0 还没到该玩家抢地主则为-1\n    repeated uint32 cur_out_card_arr = 3;       //当前桌子上该玩家的牌\n    repeated uint32 card_arr = 4;               //该玩家的手牌 除了自己以外 其他玩家的牌都是空数组\n    repeated uint32 card_marker_arr = 5;        //该玩家记牌器值 除了自己以外 其他玩家的牌都是空数组\n    uint32 remain_card_count = 6;               //该玩家剩余牌数量\n    int32 user_operate = 7;                     //该玩家进行的操作类型  -1 没出牌 2出牌 4不出\n    bool is_deposit = 8;                        //该玩家是否有托管\n}\n\n//重连信息\nmessage GameReconnectInfo  {\n    uint32 game_state = 1;                      //游戏状态 1游戏开始 2发牌 3抢地主 4抢地主完成 5玩家操作 6结束\n    GameStartNotify game_start_notify = 2;      //游戏开始的信息 包括所有玩家的信息\n    uint32 cur_operate_seat_id = 3;             //当前正在进行操作的玩家座位id\n    uint32 cur_mul = 4;                         //当前倍数\n    uint32 landlord_seat_id = 5;                //地主座位id\n    repeated uint32 landlord_extra_card = 6;    //地主额外牌\n    repeated AllPlayerData all_player_data = 7; //所有玩家的信息\n    uint32 valid_seat_id = 8;                   //有效玩家座位id 即当前桌子上用来判断牌大小的玩家座位id\n    uint32 time_out = 10;                       //剩余时间\n}\n"}