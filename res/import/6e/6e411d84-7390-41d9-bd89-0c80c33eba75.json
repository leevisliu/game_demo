{"__type__":"cc.TextAsset","_name":"ermj","text":"syntax = \"proto3\";\r\npackage ERMJ;\r\n\r\nmessage MsgBody  {\r\n    GameStartNotify     game_start_notify = 1;          //游戏开始\r\n\r\n    SendBankNotify      send_bank_notify = 2;           //庄家消息\r\n\r\n    SendCardsNotify     send_cards_notify = 3;          //发牌消息\r\n                  \r\n    TurnOperNotify      turn_oper_notify = 4;           //轮到谁操作组播\r\n\r\n    PlayerCanOperNotify can_oper_notify = 5;            //当前有可特殊操作的玩家私发其操作消息\r\n\r\n    OperReq             oper_req = 6;                   //请求操作\r\n    OperRes             oper_res = 7;                   //请求操作返回\r\n\r\n    GameConcludeNotify  game_conclude_notify = 8;       //结算\r\n    GameReconnectInfo   game_reconnect_info = 9;        //断线重连\r\n\r\n    GetCardNotify       get_card_notify = 10;           //玩家摸牌组播\r\n\r\n    CanTingNotify       can_ting_notify = 11;           //玩家能听牌通知 \r\n\r\n    SendHuaPaiNotify    send_huapai_notify  = 12;       //发送花牌消息\r\n\r\n    SendTingNotify      send_ting_notify = 13;         //发送玩家听消息组播\r\n}   \r\n\r\nmessage PlayerInfo  {\r\n    uint32 player_id = 1;\r\n    uint32 seat_id = 2;                                 //椅子号\r\n    string username = 3;\r\n    uint32 headimg_id = 4;\r\n    uint32 sex = 5;\r\n    string gold = 6;\r\n    string score = 7;\r\n}\r\n\r\n//房间信息\r\nmessage RoomInfo  {\r\n    string room_base_note = 1;              //房间底注\r\n    string room_code = 2;                   //房间编号信息\r\n}\r\n\r\n//游戏开始通知\r\nmessage GameStartNotify  {            \r\n    RoomInfo room_info = 1;                             //房间信息\r\n    uint32 time_out = 2;                                //开始状态时间\r\n    repeated PlayerInfo player_list = 3;                //所有玩家  \r\n}\r\n\r\n//发送庄家消息\r\nmessage SendBankNotify { \r\n    uint32 bankUser_seat_id = 1;                        //庄家椅子号\r\n    uint32 windPos = 2;                                 //我的风向位置  东南西北 1234\r\n}\r\n\r\n//定完庄后的发牌消息，私发给每个玩家的牌\r\nmessage SendCardsNotify {   \r\n    uint32 seat_id = 1;                                 //椅子号            \r\n    repeated uint32 cards = 2;                          //牌 [详见文件gamedefine.lua的Def.cards]\r\n    uint32 left_card = 3;                               //剩余牌数 \r\n}\r\n\r\n//只负责组播轮到谁操作的光标\r\nmessage TurnOperNotify {\r\n    uint32 seat_id = 1;                                 //椅子号\r\n    uint32 time_out = 2;                                //剩余可操作时间\r\n}\r\n\r\n//玩家摸牌组播（摸牌的椅子可以拿到正确的card,其余人为nil）\r\nmessage GetCardNotify {\r\n    uint32 seat_id = 1;                                 //椅子号\r\n    repeated uint32 card = 2;                           //摸的牌\r\n    uint32 left_card = 3;                               //剩余牌数\r\n}\r\n\r\n//卡牌组合\r\nmessage CardsCombo {\r\n    uint32 oper_type =  1;                              //组合类型[打吃碰杠胡过]\r\n    repeated uint32 cards = 2;                          //该组合的牌数据 \r\n    uint32 oper_seat_id = 3;                            //当该组合是 吃，碰，明杠，点炮胡时的提供者， 其余为无效值65535\r\n}\r\n\r\n//上一位玩家打牌了或者自己摸牌后，若判断有特殊操作这时候私发给每个能[吃碰杠胡过]玩家消息  [新增过操作ID: Def.operType.check = 10]\r\nmessage PlayerCanOperNotify {\r\n    repeated uint32 oper_type = 1;                      //吃碰杠胡过操作ID表\r\n    uint32 time_out = 2;                                //可操作时间\r\n    repeated CardsCombo combo = 3;                      //可成组合的牌组合表\r\n}\r\n\r\n//请求操作\r\n//第3个字段oper_cards解释： 被操作的牌(如桌上打了一万，我有23万，操作吃，组成1，2，3万这里就发 [1万，2万,3万]。若正常打牌X就发[牌X]\r\n//其他类似把整个操作的组合数据一起都发来不管是你手里还是桌上哪儿的牌，但是一定保证oper_type严格按照协定中[Def.operType]操作类型即可\r\nmessage OperReq {\r\n    uint32 seat_id = 1;                                 //操作玩家seat_id\r\n    uint32 oper_type = 2;                               //操作类型[详见Def.operType]\r\n    repeated uint32 oper_cards = 3;                     \r\n} \r\n\r\n//操作后返回操作的结果\r\nmessage OperRes {\r\n    int32 ret = 1;                                      //返回状态码 0成功 1等待其他人操作 -1失败\r\n    uint32 seat_id = 2;                                 //操作玩家椅子号\r\n    CardsCombo oper_cards = 3;                          //操作的具体牌信息\r\n}\r\n\r\n//结算时所有玩家摊牌时展示的信息（番型ID见Def.fanXing）\r\nmessage PlayerFinishInfo {\r\n    uint32 seat_id = 1;                                 //椅子号\r\n    repeated uint32 cards = 2;                          //手牌信息\r\n    repeated uint32 fanxing = 3;                        //番型数组(和下面对应即 fanxing[1]的番型倍数就是fanxingValue[1] )\r\n    repeated uint32 fanxingValue = 4;                   //对应上面的番型数组具体番型的值\r\n    repeated CardsCombo combos = 5;                     //玩家的组合牌表\r\n}\r\n\r\n//结算消息\r\nmessage GameConcludeNotify  {             \r\n    repeated PlayerInfo player_list = 1;               //所有玩家得分情况\r\n    repeated PlayerFinishInfo player_finish_info = 2;  //所有玩家结束时具体牌型输赢信息\r\n    uint32 huType = 3;                                 //胡牌类型 自摸还是点炮 0代表流局\r\n}\r\n\r\n//玩家已经凑成的组合\r\nmessage PlayerCombo {\r\n    uint32 seat_id =  1;                                 //椅子号\r\n    repeated CardsCombo combos = 2;                      //玩家的组合牌表\r\n    repeated int32 outCards = 3;                        //玩家打出的牌\r\n    repeated uint32 huaPai = 4;                         //玩家的花牌\r\n}\r\n\r\n//重连信息\r\nmessage GameReconnectInfo  {\r\n    uint32 my_seat_id = 1;                              //玩家椅子号\r\n    uint32 oper_seat_id = 2;                            //当前轮到操作玩家椅子号\r\n    uint32 bankUser_seat_id = 3;                        //庄家椅子号\r\n    uint32 leftTime = 4;                                //当前操作者剩余时间\r\n    RoomInfo room_info = 5;                             //房间信息\r\n    repeated PlayerInfo player_list = 6;                //所有玩家信息\r\n    repeated PlayerFinishInfo player_finish_info = 7;   //若结算了，所有玩家结束时具体牌型输赢信息\r\n    repeated tingCardInfo player_ting_cards = 8;        //玩家可胡牌数据(进入听状态时才有值)\r\n    repeated PlayerCombo player_combos = 9;             //所有玩家已凑成牌表\r\n    uint32 left_card = 10;                              //剩余牌数\r\n    repeated uint32 handCards = 11;                     //手牌信息\r\n    repeated uint32 player_handcards_nums = 12;         //所有玩家手牌数量\r\n    PlayerCanOperNotify combos = 13;                    //可成组合的牌组合表\r\n    repeated uint32 playerTingStatus = 14;              //所有玩家的听牌状态 0无状态 1待听 2正在听 3显示听按钮状态 4已经取消听\r\n    repeated tingPaiCombo ting_combo = 15;              //听牌数据\r\n    uint32 last_outcard_seat_id = 16;                   //最后一个出牌玩家座位号\r\n    uint32 windPos = 17;                                //玩家方位\r\n}\r\n\r\nmessage tingCardInfo {\r\n    uint32 ting_card = 1;                               //听的牌\r\n    uint32 left_nums = 2;                               //剩余张数\r\n    uint32 fan_Nums = 3;                                //番数\r\n}\r\n\r\nmessage tingPaiCombo {\r\n    uint32 out_card = 1;                                //打的牌\r\n    repeated tingCardInfo ting_cards = 2;               //打了out_card能胡的牌\r\n}\r\n\r\n//听牌按钮私发\r\nmessage CanTingNotify {\r\n    repeated tingPaiCombo ting_combo = 1;               //听牌组合\r\n}\r\n\r\n//组播补花消息\r\nmessage SendHuaPaiNotify {\r\n    uint32 seat_id = 1;                                 //补花玩家\r\n    repeated uint32 hua_card = 2;                       //花牌\r\n    uint32 status = 3;                                  //0正常摸打 1游戏开始\r\n}\r\n\r\n//组播玩家听\r\nmessage SendTingNotify {\r\n    uint32 seat_id = 1;                                 //听牌玩家\r\n    repeated tingCardInfo ting_cards = 2;               //打了out_card能胡的牌\r\n}"}