{"__type__":"cc.TextAsset","_name":"esyd","text":"syntax = \"proto3\";\r\npackage ESYD;\r\n\r\nmessage MsgBody  {\r\n\r\n    GameStartNotify             game_start_notify               = 1;    //游戏开始\r\n    GameBetNotify               game_bet_notify                 = 2;    //通知开始下注\r\n    GameSendCardNotify          game_send_card_notify           = 3;    //发牌通知     \r\n    GameBuyInsureNotify         game_buy_insure_notify          = 4;    //买保险通知\r\n    GameInsurePosNotify         game_insure_pos_notify          = 5;    //买保险位置通知\r\n    GameOperateNotify           game_operate_notify             = 6;    //玩家操作通知\r\n    GameBankerHoleCardNotify    game_banker_hole_card_notify    = 7;    //庄家揭底牌通知\r\n    GameBankerShowCardNotify    game_banker_show_card_notify    = 8;    //庄家开牌通知\r\n    GameConcludeNotify          game_conclude_notify            = 9;    //结算通知\r\n\r\n    GameChooseBetPosReq         game_choose_bet_pos_req         = 10;    //选择下注位置请求\r\n    GameChooseBetPosRes         game_choose_bet_pos_res         = 11;   //选择下注位置回应\r\n    GameBetReq                  game_bet_req                    = 12;   //下注请求\r\n    GameBetRes                  game_bet_res                    = 13;   //下注回应\r\n    GameBetFinishReq            game_bet_finish_req             = 14;   //下注完成请求\r\n    GameBetFinishRes            game_bet_finish_res             = 15;   //下注完成回应\r\n    GameBuyInsureReq            game_buy_insure_req             = 16;   //玩家买保险请求\r\n    GameBuyInsureRes            game_buy_insure_res             = 17;   //玩家买保险回应\r\n    GameStopCardReq             game_stop_card_req              = 18;   //玩家停牌请求\r\n    GameStopCardRes             game_stop_card_res              = 19;   //玩家停牌回应\r\n    GameGetCardReq              game_get_card_req               = 20;   //玩家要牌请求\r\n    GameGetCardRes              game_get_card_res               = 21;   //玩家要牌回应\r\n    GameSeparateCardReq         game_separate_card_req          = 22;   //玩家分牌请求\r\n    GameSeparateCardRes         game_separate_card_res          = 23;   //玩家分牌回应\r\n    GameDoubleReq               game_double_req                 = 24;   //玩家双倍下注请求\r\n    GameDoubleRes               game_double_res                 = 25;   //玩家双倍下注回应\r\n\r\n\r\n    GameReconnectInfo           game_reconnect_info             = 26;   //加入房间\r\n\r\n}\r\n\r\nmessage PlayerInfo  {\r\n    uint32 player_id = 1;\r\n    uint32 seat_id = 2;                     //座位ID\r\n    string username = 3;\r\n    string gold = 4;\r\n    uint32 headimg_id = 5;\r\n    uint32 sex = 6;                         //性别\r\n}\r\n\r\n//房间信息\r\nmessage RoomInfo  {\r\n    string room_base_note = 1;              //房间底注\r\n    string room_code = 2;                   //房间编号信息\r\n}\r\n\r\n//游戏开始通知\r\nmessage GameStartNotify  {\r\n    repeated PlayerInfo player_list = 1;    //玩家列表\r\n    RoomInfo room_info = 2;                 //房间信息\r\n    uint32 time_out = 3;                    //发牌时间\r\n}\r\n\r\n//选择下注位置请求\r\nmessage GameChooseBetPosReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n    uint32 choose_seat_id = 3;              //选择的座位号\r\n}\r\n\r\n//选择下注位置回应\r\nmessage GameChooseBetPosRes {\r\n    uint32 result = 1;                      //结果 0成功 1非法状态 3钱不够 4位置已被占用\r\n    uint32 player_seat_id = 2;              //玩家座位号 属于者位置\r\n    uint32 choose_seat_id = 3;              //选择的座位号\r\n}\r\n\r\n//通知下注\r\nmessage GameBetNotify {\r\n    uint32 min_bet_value = 1;               //最小下注额\r\n    uint32 max_bet_value = 2;               //最大下注额\r\n    uint32 time_out = 3;                    //下注时间\r\n}\r\n\r\n//下注请求\r\nmessage GameBetReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n    uint32 bet_seat_id = 2;                 //下注座位号\r\n    uint32 bet_value = 3;                   //下注值\r\n}\r\n\r\n//下注回应\r\nmessage GameBetRes {\r\n    uint32 result = 1;                      //下注结果 0成功 1非法状态 2非法下注额 3钱不够 4下注座位被占用 5该位置当前玩家已经下注\r\n    uint32 player_seat_id = 2;              //玩家座位号 属于者位置\r\n    uint32 bet_seat_id = 3;                 //下注座位号\r\n    uint32 bet_value = 4;                   //下注值\r\n    string left_gold = 5;                   //剩余金币\r\n    repeated uint32 left_bet_seat = 6;      //剩余可下注座位号\r\n}\r\n\r\n//下注完成请求\r\nmessage GameBetFinishReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n}\r\n\r\n//下注完成回应\r\nmessage GameBetFinishRes {\r\n    uint32 result = 1;                      //结果 0成功\r\n    uint32 player_seat_id = 2;              //玩家座位号 属于者位置\r\n}\r\n\r\n//玩家牌信息\r\nmessage PlayerCard {\r\n    uint32 seat_id = 1;                     //座位号  庄家座位号固定为6\r\n    repeated uint32 card_arr = 2;           //玩家牌\r\n    string card_value_str = 3;              //玩家牌值组 例如[A][2]两张牌的牌值为3和13\r\n    uint32 card_type = 4;                   //牌类型 1正常 2爆牌 3五小龙 4黑杰克\r\n}\r\n\r\n//发牌通知\r\nmessage GameSendCardNotify {\r\n    repeated PlayerCard player_card = 1;    //玩家牌 包含庄家\r\n    uint32 time_out = 2;                    //超时时间\r\n}\r\n\r\n//买保险通知 同时操作\r\nmessage GameBuyInsureNotify {\r\n    uint32 time_out = 1;                    //超时时间\r\n    uint32 state_time_out = 2;              //该阶段总时间\r\n}\r\n\r\n//通知买保险位置 只发给当前玩家 告诉他买保险的位置\r\nmessage GameInsurePosNotify {\r\n    uint32 insure_seat_id = 1;              //当前买保险的座位号\r\n}\r\n\r\n//玩家买保险请求\r\nmessage GameBuyInsureReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n    bool is_buy = 2;                        //是否买保险\r\n}\r\n\r\n//玩家买保险回应\r\nmessage GameBuyInsureRes {\r\n    uint32 result = 1;                      //买保险结果 0成功 3钱不够\r\n    bool is_buy = 2;                        //是否买保险\r\n    string left_gold = 3;                   //剩余金币\r\n    uint32 player_seat_id = 4;              //玩家座位号\r\n    uint32 buy_seat_id = 5;                 //买保险座位号\r\n    bool is_continue_buy = 6;               //是否可以继续买保险\r\n    uint32 bet_value = 7;                   //下注值\r\n}\r\n\r\n//玩家操作通知\r\nmessage GameOperateNotify {\r\n    uint32 operate_seat_id = 1;             //操作位置\r\n    uint32 card_index = 2;                  //操作的是第几组牌 如果一个玩家分牌 则他会有两组牌\r\n    repeated int32 operate_type = 3;        //可操作的类型 [-1, 1] -1:不能 1:能\r\n    uint32 player_seat_id = 4;              //拥有者位置\r\n    uint32 time_out = 5;                    //剩余时间\r\n    uint32 state_time_out = 6;              //该阶段总时间\r\n    bool turn_next_operate = 7;             //轮到下个玩家操作\r\n}\r\n\r\n//庄家揭底牌通知\r\nmessage GameBankerHoleCardNotify {\r\n    uint32 banker_card = 1;\r\n    string card_value_str = 2;              //玩家牌值组 例如[A][2]两张牌的牌值为3/13\r\n    uint32 card_type = 3;                   //牌类型 1正常 2爆牌 3五小龙 4黑杰克\r\n    bool end_action = 4;                    //庄家行动结束\r\n}\r\n\r\n//庄家开牌通知\r\nmessage GameBankerShowCardNotify {\r\n    uint32 banker_card = 1;                 //新的庄家牌\r\n    string card_value_str = 2;              //玩家牌值组 例如[A][2]两张牌的牌值为3/13\r\n    uint32 card_type = 3;                   //牌类型 1正常 2爆牌 3五小龙 4黑杰克\r\n    bool end_action = 4;                    //庄家行动结束\r\n}\r\n\r\nmessage Result {\r\n    uint32 chrome_index = 1;                        //筹码索引 1 2\r\n    int32 result_status = 2;                        //-1 输 0和 1胜\r\n}\r\n\r\nmessage BetAreaResult {\r\n    uint32 area_seat_id = 1;                //该区域座位ID\r\n    repeated Result result = 2;             //该区域的筹码得分记录 分牌情况下数组长度为2\r\n    string total_score = 3;                 //该区域总得分分数\r\n}\r\n\r\nmessage ResultInfo {\r\n    uint32 player_seat_id = 1;              //拥有者座位id\r\n    string gold = 2;                        //拥有者本局结算金币\r\n    string score = 3;                       //本玩家所有位置加起来的总输赢情况\r\n}\r\n\r\n//结算通知\r\nmessage GameConcludeNotify {\r\n    repeated ResultInfo result_info = 1;    //每位玩家的结算信息\r\n    repeated BetAreaResult area_result = 2; //每个下注区域的结算信息\r\n}\r\n\r\n//牌值信息\r\nmessage CardInfo {\r\n    uint32 card_index = 1;                  //操作的是第几组牌 如果一个玩家分牌 则他会有两组牌\r\n    uint32 card_value = 2;                  //要的牌值\r\n    string card_value_str = 3;              //玩家牌值组 例如[A][2]两张牌的牌值为3和13\r\n    uint32 card_type = 4;                   //牌类型 1正常 2爆牌 3五小龙 4黑杰克\r\n}\r\n\r\n//玩家停牌请求\r\nmessage GameStopCardReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n}\r\n\r\n//玩家停牌回应\r\nmessage GameStopCardRes {\r\n    uint32 result = 1;                      //停牌结果 0成功\r\n    uint32 player_seat_id = 2;              //停牌的玩家座位号\r\n    uint32 stop_seat_id = 3;                //停牌的座位号\r\n    uint32 card_index = 4;                  //停的是哪组牌组\r\n    string card_value_str = 5;              //停牌 牌值\r\n}\r\n\r\n//玩家要牌请求\r\nmessage GameGetCardReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n}\r\n\r\n//玩家要牌回应\r\nmessage GameGetCardRes {\r\n    uint32 player_seat_id = 1;              //玩家座位号\r\n    uint32 get_seat_id = 2;                 //要牌座位号\r\n    CardInfo card_info = 3;                 //牌类信息\r\n}\r\n\r\n//玩家分牌请求\r\nmessage GameSeparateCardReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n}\r\n\r\n//玩家分牌回应\r\nmessage GameSeparateCardRes {\r\n    uint32 player_seat_id = 1;              //玩家位置\r\n    uint32 split_seat_id = 2;               //分牌位置\r\n    repeated uint32 main_card_arr = 3;      //主牌数组\r\n    string main_card_value_str = 4;         //主牌牌值组 例如[A][2]两张牌的牌值为3和13\r\n    repeated uint32 split_card_arr = 5;     //分牌数组\r\n    string split_card_value_str = 6;        //分牌牌值组 例如[A][2]两张牌的牌值为3和13\r\n    string left_gold = 7;                   //剩余金币\r\n    uint32 bet_value = 8;                   //下注值\r\n}\r\n\r\n//玩家双倍下注请求\r\nmessage GameDoubleReq {\r\n    uint32 player_id = 1;                   //玩家id\r\n}\r\n\r\n//玩家双倍下注回应\r\nmessage GameDoubleRes {\r\n    string left_gold = 1;                   //剩余金币\r\n    uint32 player_seat_id = 2;              //玩家座位号\r\n    uint32 double_seat_id = 3;              //双倍下注座位号\r\n    CardInfo card_info = 4;                 //牌类信息\r\n    uint32 bet_value = 5;                   //下注值\r\n}\r\n\r\n//手牌信息\r\nmessage HandCardInfo {\r\n    uint32 card_index = 1;                  //操作的是第几组牌 如果一个玩家分牌 则他会有两组牌\r\n    repeated uint32 card_arr = 2;           //手牌牌值\r\n    string card_value_str = 3;              //玩家牌值组 例如[A][2]两张牌的牌值为3和13\r\n    uint32 card_type = 4;                   //牌类型 1正常 2爆牌 3五小龙 4黑杰克\r\n}\r\n\r\n//庄家牌信息\r\nmessage BankerCardInfo {\r\n    repeated uint32 banker_card = 1;                //庄家有暗牌时 发0给我\r\n    string banker_card_value_str = 2;              //玩家牌值组 例如[A][2]两张牌的牌值为3/13\r\n    uint32 banker_card_type = 3;                   //牌类型 1正常 2爆牌 3五小龙 4黑杰克\r\n}\r\n\r\n//玩家牌局信息\r\nmessage GamePlayerData {\r\n    uint32 seat_id = 1;                         //座位id\r\n    uint32 player_id = 2;                       //玩家id\r\n    string username = 3;                        //玩家名字\r\n    bool is_main = 4;                           //该位置是玩家位置还是下注位置\r\n    repeated HandCardInfo hand_card_info = 5;   //牌类信息\r\n    uint32 cur_bet = 6;                         //当前下注额\r\n    uint32 bet_station = 7;                     //下注状态  1还未下注 2已经下注过 3下注完成\r\n    bool is_buy_insure = 8;                     //是否买保险\r\n    bool is_continue_buy = 9;                   //是否还可以买保险 is_main = true的时候才用到这个字段\r\n    int32 double_bet_idx = 10;                  //双倍下注的牌的下标 -1表示没有双倍下注牌\r\n    int32 operate_station = 11;                 //玩家最新操作状态 -1无操作状态 1停牌 2要牌 3双倍下注 4分牌\r\n}\r\n\r\n//重连信息\r\nmessage GameReconnectInfo  {\r\n    GameStartNotify game_start_notify = 1;          //开始信息 游戏开局信息\r\n    uint32 min_bet_value = 2;                       //最小下注额\r\n    uint32 max_bet_value = 3;                       //最大下注额\r\n    repeated GamePlayerData game_player_data = 4;   //游戏玩家牌局信息\r\n    repeated uint32 left_bet_seat = 5;              //剩余可下注座位号 只有在下注阶段且我的状态为已下注过才有 下注完成和还未下注都是空数组\r\n    BankerCardInfo banker_card_info = 6;            //庄家牌信息\r\n    uint32 game_station = 7;                        //游戏状态 1开始 2下注 3发牌 4买保险 5玩家轮流操作 6庄家开牌 7结算\r\n    uint32 time_out = 8;                            //当前阶段剩下的时间(单位秒)\r\n    uint32 state_time_out = 9;                      //该阶段总时间\r\n}"}